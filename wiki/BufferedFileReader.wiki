#summary Class BufferedFileReader do OpenSutils-Br4J
#labels File,Reader,Buffer,IO,ES,Leituradearquivo,Arquivo

BufferedFileReader

Está classe implementa a interface org.opensutils.io.FileReader e oferece métodos para facilitar a leitura de arquivos no formato texto, utilizando um Buffer para aumentar a performaçe da leitura.
Adicionado na versão 0.2

== Detalhes ==

Os métodos disponíveis nesta classe são:

<ul>
<li>clean()</li>
<li>close()</li>
<li>getCountReadLine()</li>
<li>nextLine()</li>
<li>open()</li>
<li>readAll()</li>
<li>setFile(File)</li>
<li>setFile(String)</li>
</ul>

===Exemplo de uso====
{{{
try{
	 org.opensutils.io.FileReader reader = new org.opensutils.io.BufferedFileReader(new File("c:\\arquivo.txt"));
	 reader.open();
	 System.out.println(reader.nextLine());
	 System.out.println(reader.nextLine());
	 System.out.println(reader.nextLine());
	 System.out.println("Linhas lidas no arquivo :"+reader.getCountReadLine());//Print 3
	 reader.close();
	 reader.clean();
	}catch(IOException ioE){
		ioE.printStackTrace();
	}
}}}

*Informações dos métodos:*

<ul>
<li>
===clean===
_public void clean();_

Este método libera os recursos utilizado para ler um arquivo.
É necessario chamar o método close() antes de invocar este método, para evitar que o arquivo fique aberto no disco.

</li>
<li>
===close===
_public void close() throws IOException;_

Este método finaliza e libera o arquivo do uso para a leitura
</li>

<li>
===getCountReadLine===
_public int getCountReadLine();_

Este método retorna a contagem de linhas que foram lidas do arquivo.

</li>

<li>
===nextLine===
_public String nextLine() throws IOException;_

Faz a leitura de uma linha do arquivo e avança para a proxima linha. Retorna null quando não existir mais linhas.
Necessario existir um arquivo setado e deve ser usado depois de invocar o método open()

</li>

<li>
===open===
_public void open() throws FileNotFoundException ;_

Abre o arquivo para leitura.

</li>

<li>
===readAll===
_public StringBuilder readAll() throws IOException;_

Faz a leitura total de um arquivo, é necessario que o método open() seja executado antes deste método.

</li>

<li>
===setFile===
_public void setFile(File file);_
_public void setFile(String fileName);_

Seta um arquivo, aquele que será lido por esta classe.

</li>


</ul>